AWSTemplateFormatVersion: '2010-09-09'
Description: Root stack to orchestrate all sub-stacks and create required S3 buckets

Parameters:
  GitHubRepo:
    Type: String
    Description: GitHub repository name (e.g., aws-devops-pipeline)
    Default: "aws-devops-pipeline"

  GitHubOwner:
    Type: String
    Description: GitHub username or organization
    Default: "asamimi2"

  GitHubBranch:
    Type: String
    Default: main
    Description: Branch to monitor

  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: GitHub personal access token stored in Secrets Manager
    Default: "{{resolve:secretsmanager:GitHubToken:SecretString}}"

  ArtifactBucketName:
    Type: String
    Description: Name of the artifact bucket exported from the bootstrap stack
    Default: "devops-bootstrap-stack-artifacts"

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-LambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-LambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - s3:ListBucket
                  - s3:DeleteObject
                  - s3:GetObject
                Resource: "*"

  # IAM Role for CodePipeline to interact with other services
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-CodePipelineServiceRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CodePipelinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                  - lambda:InvokeFunction
                  - iam:PassRole
                  - iam:ListRoles
                  - codepipeline:StartPipelineExecution
                  - codepipeline:GetPipelineState
                  - codepipeline:PutActionRevision
                  - codepipeline:GetPipeline
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"

  # Static Site Stack Reference
  StaticSiteStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/s3.yaml"
  
  # SQS Stack
  SQSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: StaticSiteStack
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/sqs.yaml"

  # Lambda Stack
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - SQSStack
      - StaticSiteStack
      - LambdaExecutionRole
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/lambda.yaml"
    Parameters:
      LambdaExecutionRole: !GetAtt LambdaExecutionRole.Arn

  # EventBridge Stack
  EventBridgeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - SQSStack
      - StaticSiteStack
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/eventbridge.yaml"

  # Monitoring Stack
  MonitoringStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - SQSStack
      - StaticSiteStack
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/monitoring.yaml"

  # Pipeline Stack
  PipelineStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - SQSStack
      - StaticSiteStack
      - LambdaStack
      - CodePipelineServiceRole
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/pipeline.yaml"
      Parameters:
        GitHubRepo: !Ref GitHubRepo
        GitHubOwner: !Ref GitHubOwner
        GitHubBranch: !Ref GitHubBranch
        GitHubOAuthToken: !Ref GitHubOAuthToken
        CodePipelineServiceRole: !GetAtt CodePipelineServiceRole.Arn