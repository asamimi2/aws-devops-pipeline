AWSTemplateFormatVersion: '2010-09-09'
Description: Root stack to orchestrate all sub-stacks and create required S3 buckets

Parameters:
  GitHubRepo:
    Type: String
    Description: GitHub repository name (e.g., aws-devops-pipeline)
    Default: "aws-devops-pipeline"

  GitHubOwner:
    Type: String
    Description: GitHub username or organization
    Default: "asamimi2"

  GitHubBranch:
    Type: String
    Default: main
    Description: Branch to monitor

  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: GitHub personal access token stored in Secrets Manager
    Default: "{{resolve:secretsmanager:GitHubToken:SecretString}}"

  TemplateBaseURL:
    Type: String
    Description: Full S3 URL to templates folder (e.g., https://bucket.s3.amazonaws.com/templates/)
    Default: "https://devops-bootstrap-stack-artifacts.s3.us-east-2.amazonaws.com/templates/"

  ArtifactBucketName:
    Type: String
    Description: The name of the artifact bucket created in the bootstrap stack.
    Default: "devops-bootstrap-stack-artifacts"
  
  StaticSiteBucketName:
    Type: String
    Default: devops-root-stack-frontend
  
Resources:
  # Static Site Bucket
  StaticSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "devops-root-stack-frontend"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: false
        IgnorePublicAcls: true
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced

  StaticSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticSiteBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${StaticSiteBucket}/*"

  # === SQS Stack (must come first to export UserQueueUrl) ===
  SQSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/sqs.yaml"

  # === Lambda Stack (depends on SQS export) ===
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [SQSStack]
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/lambda.yaml"
      Parameters:
        ArtifactBucketName: !Ref ArtifactBucketName

  # === EventBridge Stack ===
  EventBridgeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [LambdaStack]
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/eventbridge.yaml"

  # === Monitoring Stack ===
  MonitoringStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [LambdaStack]
    Properties:
      TemplateURL: !Sub "https://${ArtifactBucketName}.s3.${AWS::Region}.amazonaws.com/templates/monitoring.yaml"

  # === Pipeline Stack ===
PipelineStack:
  Type: AWS::CodePipeline::Pipeline
  Properties:
    Name: YourPipelineName
    RoleArn: arn:aws:iam::ACCOUNT_ID:role/YourCodePipelineRole
    ArtifactStore:
      Type: S3
      Location: ${ArtifactBucketName}
    Stages:
      - Name: Source
        Actions:
          - Name: SourceAction
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: GitHub
              Version: 1
            OutputArtifacts:
              - Name: SourceOutput
            Configuration:
              Repo: aws-devops-pipeline
              Branch: main
              OAuthToken: !Ref GitHubOAuthToken

Outputs:
  StaticSiteBucketName:
    Description: Name of the static site bucket
    Value: !Ref StaticSiteBucket
    Export:
      Name: devops-root-stack-frontend