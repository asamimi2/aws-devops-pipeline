AWSTemplateFormatVersion: '2010-09-09'
Description: IAM roles and policies for the application

Parameters:
  StackPrefix:
    Type: String
    Description: A short prefix for stack resources (used for naming).
    Default: "devops-root-stack"

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "devops-LambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "devops-LambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - s3:ListBucket
                  - s3:DeleteObject
                  - s3:GetObject
                Resource: "*"

  # CodePipeline Service Role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "devops-CodePipelineServiceRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "devops-CodePipelinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - cloudformation:*
                  - lambda:InvokeFunction
                  - iam:PassRole
                  - iam:ListRoles
                  - codepipeline:StartPipelineExecution
                  - codepipeline:GetPipelineState
                  - codepipeline:PutActionRevision
                  - codepipeline:GetPipeline
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - config:PutEvaluations
                  - config:DescribeConfigRules
                Resource: "*"

  # CodeBuild Service Role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "devops-CodeBuildServiceRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "devops-CodeBuildPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - cloudwatch:*
                  - sns:*
                  - codebuild:*
                  - codepipeline:*
                  - iam:PassRole
                  - logs:CreateLogStream
                  - logs:PutLogEvents  
                  - logs:CreateLogGroup
                Resource: "*"

Outputs:
  LambdaExecutionRoleArn:
    Description: ARN of the Lambda execution role
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: LambdaExecutionRoleArn

  CodePipelineServiceRoleArn:
    Description: ARN of the CodePipeline service role
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: CodePipelineServiceRoleArn

  CodeBuildServiceRoleArn:
    Description: ARN of the CodeBuild service role
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: CodeBuildServiceRoleArn
