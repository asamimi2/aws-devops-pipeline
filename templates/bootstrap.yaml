AWSTemplateFormatVersion: '2010-09-09'
Description: Bootstrap stack that creates the artifact bucket and CodeBuild project to automate deployment

Resources:

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: devops-bootstrap-stack-artifacts

  BootstrapCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BootstrapCodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BootstrapCodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - cloudformation:*
                  - logs:*
                  - secretsmanager:GetSecretValue
                Resource: "*"

  BootstrapBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: BootstrapBuildProject
      ServiceRole: !GetAtt BootstrapCodeBuildRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactBucket
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.12
            build:
              commands:
                - echo "Zipping Lambda functions..."
                - mkdir -p artifacts
                - zip -r artifacts/submitData.zip lambda/submitData
                - zip -r artifacts/dlqProcessor.zip lambda/dlqProcessor
                - zip -r artifacts/cleanup.zip lambda/cleanup
                - echo "Uploading Lambda artifacts to S3..."
                - aws s3 cp artifacts/ s3://$ARTIFACT_BUCKET/lambda/ --recursive
                - echo "Uploading CloudFormation templates to S3..."
                - aws s3 cp templates/ s3://$ARTIFACT_BUCKET/templates/ --recursive --acl public-read
                - echo "Deploying root stack..."
                - aws cloudformation deploy `
                    --template-file templates/root.yaml `
                    --stack-name devops-root-stack `
                    --capabilities CAPABILITY_NAMED_IAM `
                    --parameter-overrides `
                        GitHubRepo=aws-devops-pipeline `
                        GitHubOwner=asamimi2 `
                        GitHubBranch=main `
                        GitHubOAuthToken='{{resolve:secretsmanager:GitHubToken:SecretString}}' `
                        ArtifactBucketName=$ARTIFACT_BUCKET `
                        TemplateBaseURL=https://$ARTIFACT_BUCKET.s3.amazonaws.com/templates/
      Artifacts:
        Type: NO_ARTIFACTS

Outputs:
  ArtifactBucketName:
    Value: !Ref ArtifactBucket
