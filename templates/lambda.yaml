AWSTemplateFormatVersion: '2010-09-09'
Description: API Gateway, Lambda Functions, and IAM roles for file upload

Resources:
  # Create API Gateway
  APIGatewayRestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyAPIGateway
      Description: API Gateway for file uploads
      FailOnWarnings: true

  # Create Resource (/upload)
  UploadResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGatewayRestAPI
      ParentId: !GetAtt APIGatewayRestAPI.RootResourceId
      PathPart: upload

  # Create Method for POST on /upload (integrated with Lambda)
  UploadMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref UploadResource
      RestApiId: !Ref APIGatewayRestAPI
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SubmitDataFunction.Arn}/invocations

  # Deploy the API Gateway
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: UploadMethod
    Properties:
      RestApiId: !Ref APIGatewayRestAPI
      StageName: prod

  # Submit Data Lambda Function
  SubmitDataFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SubmitDataFunction
      Runtime: python3.12
      Handler: handler.lambda_handler
      Role: !ImportValue LambdaExecutionRoleArn  # Use imported Lambda execution role
      Code:
        S3Bucket: !ImportValue ArtifactBucketName
        S3Key: lambda/submitData.zip
      Timeout: 10
      Environment:
        Variables:
          QUEUE_URL: !ImportValue MyQueueUrl
          BUCKET_NAME: !ImportValue StaticSiteBucketName  # Import the StaticSiteBucketName from the root stack
          API_ENDPOINT: !Ref APIGatewayRestAPI

  # DLQ Processor Lambda Function
  DLQProcessorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: DLQProcessorFunction
      Runtime: python3.12
      Handler: handler.lambda_handler
      Role: !ImportValue LambdaExecutionRoleArn  # Use imported Lambda execution role
      Code:
        S3Bucket: !ImportValue ArtifactBucketName
        S3Key: lambda/dlqProcessor.zip
      Timeout: 10

  # Cleanup Lambda Function
  CleanupFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CleanupFunction
      Runtime: python3.12
      Handler: handler.lambda_handler
      Role: !ImportValue LambdaExecutionRoleArn  # Use imported Lambda execution role
      Code:
        S3Bucket: !ImportValue ArtifactBucketName
        S3Key: lambda/cleanup.zip
      Timeout: 10
      Environment:
        Variables:
          BUCKET_NAME: !ImportValue StaticSiteBucketName  # Attach StaticSiteBucketName from the root stack

Outputs:
  APIEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${APIGatewayRestAPI}.execute-api.${AWS::Region}.amazonaws.com/prod/upload"
    Export:
      Name: "APIEndpoint"

  SubmitDataFunctionArn:
    Value: !GetAtt SubmitDataFunction.Arn
    Export:
      Name: SubmitDataFunctionArn

  CleanupFunctionArn:
    Value: !GetAtt CleanupFunction.Arn
    Export:
      Name: CleanupFunctionArn
